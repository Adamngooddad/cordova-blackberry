<project name="PhoneGap BlackBerry Ant Build" default="build">
	<!-- PROPERTY DEFINITION - FILL THESE OUT! -->
	<!-- rapc and sigtool require the jde.home property to be set (5.0+ JRE only-->
	<property name="jre.home" location="C:\eclipse-3.5.2\plugins\net.rim.ejde.componentpack5.0.0_5.0.0.25\components" />
<!--	<property name="jre.home" location="C:\eclipse-3.5.2\plugins\net.rim.ejde.componentpack6.0.0_6.0.0.29\components" /> -->
	<!-- directory of simulator to copy files to -->
	<property name="simulator.home" location="${jre.home}\simulator\" />
	<!-- directory of MDS-CS to allow XHR in the simulator -->
	<property name="mds.home" location="${jre.home}\MDS\" />
	<!-- directory of your BlackBerry Widget project-->
	<property name="widget.dir" location="widget" />
	<!-- directory where you want the final binaries to be copied to. -->
	<property name="build.dir" location="build" />
	<!-- name of the binaries to generate (i.e. <blah>.cod, <blah>.jar, etc.) -->
	<property name="cod.name" value="PhoneGapWidget" />
	<!-- password for the Signature Tool -->
	<property name="password" value="" />
	<!-- name of the application, as it appears in the BlackBerry menu -->
	<property name="application.name" value="PhoneGap Widget" />
 
 	<target name="build" depends="clean, setupconfig, buildjavascript">
		<!-- create build directory -->
		<mkdir dir="${build.dir}" />
		<!-- Create .jar from WidgetExtension -->
		<zip destfile="${widget.dir}/ext/phonegap.jar">
			<fileset dir="framework/ext/src" includes="library.xml" />
			<fileset dir="framework/ext/src" includes="com/**/*.java" />
		</zip>
		<!-- Package the widget project. First zip up widget dir then run widget packager tool.-->
		<zip compress="false" destfile="${build.dir}/${cod.name}.zip" basedir="${widget.dir}" excludes=".settings,.project" />
		<exec executable="cmd">
			<arg value="/c" />
			<arg value="bbwp" />
			<arg file="${build.dir}/${cod.name}.zip" />
<!--			<arg value="/g" /> -->
<!--			<arg value="${password}" /> -->
			<arg value="/o" />
			<arg file="${build.dir}" />
		</exec>
		<!-- Delete zip file-->
		<delete file="${build.dir}/${cod.name}.zip" /> 
	</target>
	
	<target name="setupconfig" depends="seticons, setloadingscreen">
        <!-- replace application name. -->
		<replace file="${widget.dir}/config.xml" token="%PLACEHOLDER%" value="${application.name}"/>
        <echo file="${widget.dir}/config.xml" message="&lt;/widget&gt;" append="true" />
	</target>
   <target name="copywww" description="Copy over index and config xml from www directory">
		<copy todir="${widget.dir}" overwrite="true">
			<fileset dir="www" />
		</copy>
   </target>
   <!-- a whole bunch of awesome conditional tasks that execute depending on existence of files; for resolving icon and loading screen images -->
   <target name="seticons" depends="copywww, checkicons" if="icon.main">
        <echo file="${widget.dir}/config.xml" append="true" message='&lt;icon src="icon.png" /&gt;' />
   </target>
   <target name="checkicons" unless="icon.main">
        <!-- todo: parse hover icon as well -->
        <available property="icon.main" file="${widget.dir}/icon.png" />
   </target>
   <target name="setloadingscreen" depends="copywww, checkloadingscreen" if="loading.main">
        <echo file="${widget.dir}/config.xml" append="true" message='&lt;rim:loadingScreen backgroundImage="Default.png" /&gt;' />
   </target>
   <target name="checkloadingscreen" unless="loading.main">
        <!-- todo: parse foreground image as well -->
        <available property="loading.main" file="${widget.dir}/Default.png" />
   </target>
   
	<target name="clean">
		<delete dir="${build.dir}" />
		<delete dir="${widget.dir}" />
   	</target>
 
	<target name="buildjavascript">
		<concat destfile="${widget.dir}/javascript/phonegap.js" append="true">
			<fileset dir="js/">
				<include name="*.js" />
			</fileset>
		</concat>
	</target>
 
	<target name="load-simulator" depends="build">
		<copy todir="${simulator.home}">
			<fileset dir="${build.dir}/StandardInstall" includes="*.cod,*.cso,*.csl,*.alx" />
		</copy>
		<exec executable="${mds.home}/run.bat" dir="${mds.home}" spawn="true"></exec>
		<exec executable="${simulator.home}/defaultSimulator.bat" dir="${simulator.home}" spawn="true"></exec>
	</target>
	<target name="load-device" depends="build">
		<exec executable="${jre.home}/bin/JavaLoader.exe" dir="." failonerror="true">
			<arg value="-u" />
			<arg value="load" />
			<arg file="${build.dir}/StandardInstall/${cod.name}.cod" />
		</exec>
	</target>
</project>